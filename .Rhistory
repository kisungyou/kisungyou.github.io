yy = c(pt1[2],pt2[2])
lines(xx,yy,lwd=4,col=col_points[i],lend=0)
}
dev.off()
graphics.off()
par_cexmain = 2.25
par_cexlab  = 1.55
par_cexpts  = 0.85
# draw
png(file="code1_allthree.png", width=750, height=400)
par(mfrow=c(1,3))
plot(method1, col=col_points, pch=19, main="Exact PCA", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
plot(method3, col=col_points, pch=19, main="SVD without Centering", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
diff_cex = 1.1
plot(method1, col=col_shadow, pch=10, main="Difference", xlab="Dimension 1", ylab="Dimension 2",
cex=diff_cex, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
points(method3, col=col_shadow, pch=10, cex=diff_cex)
for (i in 1:length(lab)){
# extract coordinates
pt1 = method1[i,]
pt2 = method3[i,]
# specify x{start,end} and y{start, end}
xx = c(pt1[1],pt2[1])
yy = c(pt1[2],pt2[2])
lines(xx,yy,lwd=4,col=col_points[i],lend=0)
}
dev.off()
help(png)
help(x11)
graphics.off()
par_cexmain = 2.25
par_cexlab  = 1.55
par_cexpts  = 0.85
# draw
x11(width=8, height=4)
par(mfrow=c(1,3))
plot(method1, col=col_points, pch=19, main="Exact PCA", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
plot(method3, col=col_points, pch=19, main="SVD without Centering", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
diff_cex = 1.1
plot(method1, col=col_shadow, pch=10, main="Difference", xlab="Dimension 1", ylab="Dimension 2",
cex=diff_cex, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
points(method3, col=col_shadow, pch=10, cex=diff_cex)
for (i in 1:length(lab)){
# extract coordinates
pt1 = method1[i,]
pt2 = method3[i,]
# specify x{start,end} and y{start, end}
xx = c(pt1[1],pt2[1])
yy = c(pt1[2],pt2[2])
lines(xx,yy,lwd=4,col=col_points[i],lend=0)
}
graphics.off()
par_cexmain = 2.25
par_cexlab  = 1.55
par_cexpts  = 0.85
# draw
x11(width=10, height=5)
par(mfrow=c(1,3))
plot(method1, col=col_points, pch=19, main="Exact PCA", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
plot(method3, col=col_points, pch=19, main="SVD without Centering", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
diff_cex = 1.1
plot(method1, col=col_shadow, pch=10, main="Difference", xlab="Dimension 1", ylab="Dimension 2",
cex=diff_cex, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
points(method3, col=col_shadow, pch=10, cex=diff_cex)
for (i in 1:length(lab)){
# extract coordinates
pt1 = method1[i,]
pt2 = method3[i,]
# specify x{start,end} and y{start, end}
xx = c(pt1[1],pt2[1])
yy = c(pt1[2],pt2[2])
lines(xx,yy,lwd=4,col=col_points[i],lend=0)
}
graphics.off()
par_cexmain = 2.25
par_cexlab  = 1.55
par_cexpts  = 0.85
# draw
x11(width=11, height=5)
par(mfrow=c(1,3))
plot(method1, col=col_points, pch=19, main="Exact PCA", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
plot(method3, col=col_points, pch=19, main="SVD without Centering", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
diff_cex = 1.1
plot(method1, col=col_shadow, pch=10, main="Difference", xlab="Dimension 1", ylab="Dimension 2",
cex=diff_cex, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
points(method3, col=col_shadow, pch=10, cex=diff_cex)
for (i in 1:length(lab)){
# extract coordinates
pt1 = method1[i,]
pt2 = method3[i,]
# specify x{start,end} and y{start, end}
xx = c(pt1[1],pt2[1])
yy = c(pt1[2],pt2[2])
lines(xx,yy,lwd=4,col=col_points[i],lend=0)
}
graphics.off()
par_cexmain = 2.25
par_cexlab  = 1.55
par_cexpts  = 0.85
# draw
x11(width=11, height=5)
par(mfrow=c(1,3))
plot(method1, col=col_points, pch=19, main="Exact PCA", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
plot(method3, col=col_points, pch=19, main="SVD without Centering", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
diff_cex = 1.1
plot(method1, col=col_shadow, pch=10, main="Difference", xlab="Dimension 1", ylab="Dimension 2",
cex=diff_cex, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
points(method3, col=col_shadow, pch=10, cex=diff_cex)
for (i in 1:length(lab)){
# extract coordinates
pt1 = method1[i,]
pt2 = method3[i,]
# specify x{start,end} and y{start, end}
xx = c(pt1[1],pt2[1])
yy = c(pt1[2],pt2[2])
lines(xx,yy,lwd=4,col=col_points[i],lend=0)
}
graphics.off()
par_cexmain = 2.25
par_cexlab  = 1.55
par_cexpts  = 0.85
# draw
par(mfrow=c(1,3))
plot(method1, col=col_points, pch=19, main="Exact PCA", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
plot(method3, col=col_points, pch=19, main="SVD without Centering", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
diff_cex = 1.1
plot(method1, col=col_shadow, pch=10, main="Difference", xlab="Dimension 1", ylab="Dimension 2",
cex=diff_cex, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
points(method3, col=col_shadow, pch=10, cex=diff_cex)
for (i in 1:length(lab)){
# extract coordinates
pt1 = method1[i,]
pt2 = method3[i,]
# specify x{start,end} and y{start, end}
xx = c(pt1[1],pt2[1])
yy = c(pt1[2],pt2[2])
lines(xx,yy,lwd=4,col=col_points[i],lend=0)
}
graphics.off()
par_cexmain = 2.25
par_cexlab  = 1.55
par_cexpts  = 0.85
# draw
par(mfrow=c(2,2))
plot(method1, col=col_points, pch=19, main="Exact PCA", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
plot(method3, col=col_points, pch=19, main="SVD without Centering", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
diff_cex = 1.1
plot(method1, col=col_shadow, pch=10, main="Difference", xlab="Dimension 1", ylab="Dimension 2",
cex=diff_cex, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
points(method3, col=col_shadow, pch=10, cex=diff_cex)
for (i in 1:length(lab)){
# extract coordinates
pt1 = method1[i,]
pt2 = method3[i,]
# specify x{start,end} and y{start, end}
xx = c(pt1[1],pt2[1])
yy = c(pt1[2],pt2[2])
lines(xx,yy,lwd=4,col=col_points[i],lend=0)
}
dim(pt1)
pt1
dim(method1)
apply(method1-method2,1,norm)
apply(method1-method2,1,norm)
method1
graphics.off()
par_cexmain = 2.25
par_cexlab  = 1.55
par_cexpts  = 0.85
# draw
png(file="code1_all.png", width=800, height=800)
par(mfrow=c(1,3))
plot(method1, col=col_points, pch=19, main="Exact PCA", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
plot(method3, col=col_points, pch=19, main="SVD without Centering", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
diff_cex = 1.1
plot(method1, col=col_shadow, pch=10, main="Difference", xlab="Dimension 1", ylab="Dimension 2",
cex=diff_cex, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
points(method3, col=col_shadow, pch=10, cex=diff_cex)
for (i in 1:length(lab)){
# extract coordinates
pt1 = method1[i,]
pt2 = method3[i,]
# specify x{start,end} and y{start, end}
xx = c(pt1[1],pt2[1])
yy = c(pt1[2],pt2[2])
lines(xx,yy,lwd=4,col=col_points[i],lend=0)
}
dev.off()
par_cexmain = 2.25
par_cexlab  = 1.55
par_cexpts  = 0.85
# draw
png(file="code1_all.png", width=800, height=600)
par(mfrow=c(1,3))
plot(method1, col=col_points, pch=19, main="Exact PCA", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
plot(method3, col=col_points, pch=19, main="SVD without Centering", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
diff_cex = 1.1
plot(method1, col=col_shadow, pch=10, main="Difference", xlab="Dimension 1", ylab="Dimension 2",
cex=diff_cex, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
points(method3, col=col_shadow, pch=10, cex=diff_cex)
for (i in 1:length(lab)){
# extract coordinates
pt1 = method1[i,]
pt2 = method3[i,]
# specify x{start,end} and y{start, end}
xx = c(pt1[1],pt2[1])
yy = c(pt1[2],pt2[2])
lines(xx,yy,lwd=4,col=col_points[i],lend=0)
}
dev.off()
graphics.off()
par_cexmain = 2.25
par_cexlab  = 1.75
par_cexpts  = 1
# draw
png(file="code1_all.png", width=800, height=600)
par(mfrow=c(1,3))
plot(method1, col=col_points, pch=19, main="Exact PCA", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
plot(method3, col=col_points, pch=19, main="SVD without Centering", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
diff_cex = 1.1
plot(method1, col=col_shadow, pch=10, main="Difference", xlab="Dimension 1", ylab="Dimension 2",
cex=diff_cex, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
points(method3, col=col_shadow, pch=10, cex=diff_cex)
for (i in 1:length(lab)){
# extract coordinates
pt1 = method1[i,]
pt2 = method3[i,]
# specify x{start,end} and y{start, end}
xx = c(pt1[1],pt2[1])
yy = c(pt1[2],pt2[2])
lines(xx,yy,lwd=4,col=col_points[i],lend=0)
}
dev.off()
graphics.off()
par_cexmain = 2.25
par_cexlab  = 1.7
par_cexpts  = 1.1
# draw
png(file="code1_all.png", width=800, height=600)
par(mfrow=c(1,3))
plot(method1, col=col_points, pch=19, main="Exact PCA", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
plot(method3, col=col_points, pch=19, main="SVD without Centering", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
diff_cex = 1.1
plot(method1, col=col_shadow, pch=10, main="Difference", xlab="Dimension 1", ylab="Dimension 2",
cex=diff_cex, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
points(method3, col=col_shadow, pch=10, cex=diff_cex)
for (i in 1:length(lab)){
# extract coordinates
pt1 = method1[i,]
pt2 = method3[i,]
# specify x{start,end} and y{start, end}
xx = c(pt1[1],pt2[1])
yy = c(pt1[2],pt2[2])
lines(xx,yy,lwd=4,col=col_points[i],lend=0)
}
dev.off()
graphics.off()
par_cexmain = 2.25
par_cexlab  = 1.6
par_cexpts  = 1.1
# draw
png(file="code1_all.png", width=800, height=600)
par(mfrow=c(1,3))
plot(method1, col=col_points, pch=19, main="Exact PCA", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
plot(method3, col=col_points, pch=19, main="SVD without Centering", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
diff_cex = 1.1
plot(method1, col=col_shadow, pch=10, main="Difference", xlab="Dimension 1", ylab="Dimension 2",
cex=diff_cex, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
points(method3, col=col_shadow, pch=10, cex=diff_cex)
for (i in 1:length(lab)){
# extract coordinates
pt1 = method1[i,]
pt2 = method3[i,]
# specify x{start,end} and y{start, end}
xx = c(pt1[1],pt2[1])
yy = c(pt1[2],pt2[2])
lines(xx,yy,lwd=4,col=col_points[i],lend=0)
}
dev.off()
graphics.off()
par_cexmain = 2.25
par_cexlab  = 1.4
par_cexpts  = 1.1
# draw
png(file="code1_all.png", width=800, height=600)
par(mfrow=c(1,3))
plot(method1, col=col_points, pch=19, main="Exact PCA", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
plot(method3, col=col_points, pch=19, main="SVD without Centering", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
diff_cex = 1.1
plot(method1, col=col_shadow, pch=10, main="Difference", xlab="Dimension 1", ylab="Dimension 2",
cex=diff_cex, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
points(method3, col=col_shadow, pch=10, cex=diff_cex)
for (i in 1:length(lab)){
# extract coordinates
pt1 = method1[i,]
pt2 = method3[i,]
# specify x{start,end} and y{start, end}
xx = c(pt1[1],pt2[1])
yy = c(pt1[2],pt2[2])
lines(xx,yy,lwd=4,col=col_points[i],lend=0)
}
dev.off()
graphics.off()
par_cexmain = 2.25
par_cexlab  = 1.5
par_cexpts  = 1.1
# draw
png(file="code1_all.png", width=800, height=600)
par(mfrow=c(1,3))
plot(method1, col=col_points, pch=19, main="Exact PCA", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
plot(method3, col=col_points, pch=19, main="SVD without Centering", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
diff_cex = 1.1
plot(method1, col=col_shadow, pch=10, main="Difference", xlab="Dimension 1", ylab="Dimension 2",
cex=diff_cex, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
points(method3, col=col_shadow, pch=10, cex=diff_cex)
for (i in 1:length(lab)){
# extract coordinates
pt1 = method1[i,]
pt2 = method3[i,]
# specify x{start,end} and y{start, end}
xx = c(pt1[1],pt2[1])
yy = c(pt1[2],pt2[2])
lines(xx,yy,lwd=4,col=col_points[i],lend=0)
}
dev.off()
graphics.off()
par_cexmain = 2.25
par_cexlab  = 1.5
par_cexpts  = 1.1
# draw
png(file="code1_all.png", width=800, height=600)
par(mfrow=c(1,3))
plot(method1, col=col_points, pch=19, main="Exact PCA", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
plot(method3, col=col_points, pch=19, main="SVD without Centering", xlab="Dimension 1", ylab="Dimension 2",
cex=par_cexpts, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
diff_cex = 1.1
plot(method1, col=col_shadow, pch=10, main="Difference", xlab="Dimension 1", ylab="Dimension 2",
cex=diff_cex, cex.main=par_cexmain, cex.lab=par_cexlab, xlim=c(-3.5, 4.2), ylim=c(-1.5, 1.5))
points(method3, col=col_shadow, pch=10, cex=diff_cex)
for (i in 1:length(lab)){
# extract coordinates
pt1 = method1[i,]
pt2 = method3[i,]
# specify x{start,end} and y{start, end}
xx = c(pt1[1],pt2[1])
yy = c(pt1[2],pt2[2])
lines(xx,yy,lwd=1,col=col_points[i],lend=0)
}
dev.off()
rm(list=ls())
exp(100/4)
---
pagetitle: "KY-Contact"
getwd()
Install with python3 -m pip install jupyter
func_fin <- function(x){
return(100-base::sum(x))
}
rm(list=ls())
func_fin <- function(x){
return(100-base::sum(x))
}
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
# plug-in raw scores
raw_scores <- c(56,61.5,63,57,66.5,70,93,88.5,89,90,66,88)
rm(list=ls())
# plug-in raw scores
raw_scores <- c(56,61.5,63,57,66.5,70,93,88.5,89,90,66,88)
length(raw_scores)
raw_mean   <- mean(raw_scores)
raw_mean
help(solve)
help(integrate)
help(optimize)
func_find <- function(c){
return((base::mean(raw_scores + (100-raw_scores)*c)-90)^2)
}
uniroot(func_find, lower=0, upper=100)
uniroot(func_find, lower=0, upper=10)
func_minimize <- function(c){
return((base::mean(raw_scores + (100-raw_scores)*c)-90)^2)
}
optimise(func_minimize)
optimise(func_minimize, c=0, c=0.99)
optimise(func_minimize, lower=0, upper=0.99)
scale_adjust <- optimise(func_minimize, lower=0, upper=0.99)$minimum
# adjusted score
adj_scores <- raw_scores + (100-adj_scores)*scale_adjust
# raw scores and its mean
raw_scores <- c(56,61.5,63,57,66.5,70,93,88.5,89,90,66,88)
raw_mean   <- mean(raw_scores)
func_minimize <- function(c){
return((base::mean(raw_scores + (100-raw_scores)*c)-90)^2)
}
scale_adjust <- optimise(func_minimize, lower=0, upper=0.99)$minimum
# adjusted score
adj_scores <- raw_scores + (100-raw_scores)*scale_adjust
print(adj_scores)
source("~/Baruch College Dropbox/Kisung You/24F-4430-InferentialStatistics/Exams/Exam1/adjuster.R")
raw_mean
source("~/Baruch College Dropbox/Kisung You/24F-4430-InferentialStatistics/Exams/Exam1/adjuster.R")
raw_mean
(87.1+89.9)/2
source("~/Baruch College Dropbox/Kisung You/24F-4430-InferentialStatistics/Exams/Exam1/adjuster.R")
mean(c(83,87))
source("~/Baruch College Dropbox/Kisung You/24F-4430-InferentialStatistics/Exams/Exam1/adjuster.R")
raw_mean
source("~/Baruch College Dropbox/Kisung You/24F-4430-InferentialStatistics/Exams/Exam1/adjuster.R")
source("~/Baruch College Dropbox/Kisung You/24F-4430-InferentialStatistics/Exams/Exam1/adjuster.R")
source("~/Baruch College Dropbox/Kisung You/24F-4430-InferentialStatistics/Exams/Exam1/adjuster.R")
median(raw_scores)
mean(raw_scores)
source("~/Baruch College Dropbox/Kisung You/24F-4430-InferentialStatistics/Exams/Exam1/adjuster.R")
raw_mean
source("~/Baruch College Dropbox/Kisung You/24F-4430-InferentialStatistics/Exams/Exam1/adjuster.R")
source("~/Baruch College Dropbox/Kisung You/24F-4430-InferentialStatistics/Exams/Exam1/adjuster.R")
source("~/Baruch College Dropbox/Kisung You/24F-4430-InferentialStatistics/Exams/Exam1/adjuster.R")
source("~/Baruch College Dropbox/Kisung You/24F-4430-InferentialStatistics/Exams/Exam1/adjuster.R")
source("~/Baruch College Dropbox/Kisung You/24F-4430-InferentialStatistics/Exams/Exam1/adjuster.R")
source("~/Baruch College Dropbox/Kisung You/24F-4430-InferentialStatistics/Exams/Exam1/adjuster.R")
# raw scores and its median
raw_scores   <- c(56,61.5,63,57,66.5,70,93,88.5,89,90,66,88)
raw_centroid <- median(raw_scores)
target_score  <- 85
func_minimize <- function(c){
return((median(raw_scores + (100-raw_scores)*c)-target_score)^2)
}
scale_adjust <- optimise(func_minimize, lower=0, upper=0.99)$minimum
# adjusted score
adj_scores <- raw_scores + (100-raw_scores)*scale_adjust
for (i in 1:length(raw_scores)){
print(paste0("raw=",raw_scores[i]," / adjusted=",round(adj_scores[i],2)))
}
pnorm(0)
pnorm(1)-pnorm(-2)
qt(0, df=10)
qt(0.1, df=27)
qt(0.995, df=27)
x = c(19.7, 23.3, 23.6, 26.4, 20, 25.2, 25.8, 21.2, 14.5, 27.3)
x = c(19.7, 23.3, 23.6, 26.4, 20, 25.2, 25.8, 21.2, 14.5, 27.3)
median(x)
rm(list=ls())
library(dplyr)
data("ToothGrowth")
# see the data
head(ToothGrowth)
# set as data.frame
dfnow = data.frame(ToothGrowth) %>%
filter(supp=="OJ") %>%
filter(dose==1)
# now OJ with 1mg/day
data = as.vector(dfnow$len)
# median
sort(data)
# mean and standard deviation
mean(data)
sd(data)
# confidence interval of the mean
n = length(data)
qt(0.975, df=n-1)
22.7 - qt(0.975, df=n-1)*sd(data)/sqrt(length(data))
22.7 + qt(0.975, df=n-1)*sd(data)/sqrt(length(data))
# compute 97.5% percentile
qt(0.025, df=n-1, lower.tail = FALSE)
# compute 97.5% percentile
qt(0.025, df=n-1, lower.tail = FALSE)*3.911/sqrt(n) + 22
x = c(95,90,85,85,80,75)
y_true   = c(91,94,88,70,82,67)
y_fitted = -20 + 1.2*x
# residuals
y_true - y_fitted
