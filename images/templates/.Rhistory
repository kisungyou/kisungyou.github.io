xx = c("devtools","roxygen2","usethis","RcppArmadillo")
install.packages(xx, dependencies = TRUE)
install.packages("ggplot2", dependencies = TRUE)
opt_intercept = c(TRUE, FALSE)
opt_alpha     = seq(from=0, to=1, by=0.1)
opt_scaling   = c(TRUE, FALSE)
opt_predict   = c("lambda.1se","lambda.min")
library(tidyr)
# combination of all
opt_listing = tidyr::crossing(
intercept=opt_intercept,
alpha=opt_alpha,
scaling=opt_scaling,
predict=opt_predict
)
nrow(opt_listing)
install.packages("difR", dependencies = TRUE)
install.packages("difR", dependencies = TRUE)
install.packages(c("cpp11", "fs", "gargle", "igraph", "viridis"))
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("tidyverse")
BiocManager::install("factoextra")
BiocManager::install("msdata")
BiocManager::install("mzR")
BiocManager::install("rhdf5")
BiocManager::install("rpx")
BiocManager::install("MsCoreUtils")
BiocManager::install("QFeatures")
BiocManager::install("Spectra")
BiocManager::install("ProtGenerics")
BiocManager::install("PSMatch")
BiocManager::install("pheatmap")
BiocManager::install("limma")
BiocManager::install("MSnID")
BiocManager::install("RforMassSpectrometry/SpectraVis")
install.packages("quarto", dependencies = TRUE)
# example figures by their sizes
rm(list=ls())
library(ggplot2)
library(rstudioapi)
# some random histogram example -------------------------------------------
set.seed(1234)
df <- data.frame(
sex=factor(rep(c("F", "M"), each=200)),
weight=round(c(rnorm(200, mean=55, sd=5), rnorm(200, mean=65, sd=5)))
)
head(df)
# Basic histogram
ggplot(df, aes(x=weight, color=sex)) +
geom_histogram(fill="white")
# Basic histogram
p <- ggplot(df, aes(x=weight, color=sex)) +
geom_histogram(fill="white")
# example figures by their sizes
rm(list=ls())
library(ggplot2)
library(rstudioapi)
# some random histogram example -------------------------------------------
set.seed(1234)
df <- data.frame(
sex=factor(rep(c("F", "M"), each=200)),
weight=round(c(rnorm(200, mean=55, sd=5), rnorm(200, mean=65, sd=5)))
)
head(df)
# Basic histogram
p <- ggplot(df, aes(x=weight, color=sex)) +
geom_histogram(fill="white")
# title
set1 <- p + ggtitle("width 2, height 1")
set2 <- p + ggtitle("width 3, height 2")
set3 <- p + ggtitle("width 4, height 3")
# save : names are units of "px" by "width x height"
ggsave("test_set1.png", set1, width=2, height=1)
ggsave("test_set2.png", set1, width=3, height=2)
ggsave("test_set3.png", set1, width=4, height=3)
# example figures by their sizes
rm(list=ls())
library(ggplot2)
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# some random histogram example -------------------------------------------
set.seed(1234)
df <- data.frame(
sex=factor(rep(c("F", "M"), each=200)),
weight=round(c(rnorm(200, mean=55, sd=5), rnorm(200, mean=65, sd=5)))
)
head(df)
# Basic histogram
p <- ggplot(df, aes(x=weight, color=sex)) +
geom_histogram(fill="white")
# title
set1 <- p + ggtitle("width 2, height 1")
set2 <- p + ggtitle("width 3, height 2")
set3 <- p + ggtitle("width 4, height 3")
# save : names are units of "px" by "width x height"
ggsave("test_set1.png", set1, width=2, height=1)
ggsave("test_set2.png", set1, width=3, height=2)
ggsave("test_set3.png", set1, width=4, height=3)
# example figures by their sizes
rm(list=ls())
library(ggplot2)
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# some random histogram example -------------------------------------------
set.seed(1234)
df <- data.frame(
sex=factor(rep(c("F", "M"), each=200)),
weight=round(c(rnorm(200, mean=55, sd=5), rnorm(200, mean=65, sd=5)))
)
head(df)
# Basic histogram
p <- ggplot(df, aes(x=weight, color=sex)) +
geom_histogram(fill="white")
# title
set1 <- p + ggtitle("width 2, height 1")
set2 <- p + ggtitle("width 3, height 2")
set3 <- p + ggtitle("width 4, height 3")
# save : names are units of "px" by "width x height"
ggsave("test_set1.png", set1, width=2, height=1)
ggsave("test_set2.png", set2, width=3, height=2)
ggsave("test_set3.png", set3, width=4, height=3)
